using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Task3
{
    public static class MoveFinder
    {

        public static Maybe<Move> tryToWin(List<Move> moves)
        {
            // Diagonals offensive
            if (moves.Exists(item => item.Item1 == 0 && item.Item2 == 0 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 2 && item.Item2 == 2 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 2 && item.Item2 == 2 && item.Item3 == 'o'))) return new Move(2, 2, 'o');
            if (moves.Exists(item => item.Item1 == 0 && item.Item2 == 0 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 2 && item.Item2 == 2 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o'))) return new Move(1, 2, 'o');
            if (moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 2 && item.Item2 == 2 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 0 && item.Item2 == 0 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 0 && item.Item2 == 0 && item.Item3 == 'o'))) return new Move(0, 0, 'o');

            if (moves.Exists(item => item.Item1 == 0 && item.Item2 == 2 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 2 && item.Item2 == 0 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 2 && item.Item2 == 0 && item.Item3 == 'o'))) return new Move(2, 0, 'o');
            if (moves.Exists(item => item.Item1 == 2 && item.Item2 == 0 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 0 && item.Item2 == 2 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 0 && item.Item2 == 2 && item.Item3 == 'o'))) return new Move(0, 2, 'o');
            if (moves.Exists(item => item.Item1 == 0 && item.Item2 == 2 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 2 && item.Item2 == 0 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o'))) return new Move(1, 1, 'o');
            // Cross offensive
            if (moves.Exists(item => item.Item1 == 0 && item.Item2 == 1 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 2 && item.Item2 == 1 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 2 && item.Item2 == 1 && item.Item3 == 'o'))) return new Move(2, 1, 'o');
            if (moves.Exists(item => item.Item1 == 2 && item.Item2 == 1 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 0 && item.Item2 == 1 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 0 && item.Item2 == 1 && item.Item3 == 'o'))) return new Move(0, 1, 'o');
            if (moves.Exists(item => item.Item1 == 0 && item.Item2 == 1 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 2 && item.Item2 == 1 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o'))) return new Move(1, 1, 'o');

            if (moves.Exists(item => item.Item1 == 1 && item.Item2 == 0 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 1 && item.Item2 == 2 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 2 && item.Item3 == 'o'))) return new Move(1, 2, 'o');
            if (moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 2 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 1 && item.Item2 == 0 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 0 && item.Item3 == 'o'))) return new Move(1, 0, 'o');
            if (moves.Exists(item => item.Item1 == 1 && item.Item2 == 0 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 2 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o'))) return new Move(1, 1, 'o');
            // Columns offensive
            if (moves.Exists(item => item.Item1 == 0 && item.Item2 == 0 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 0 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 2 && item.Item2 == 0 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 2 && item.Item2 == 0 && item.Item3 == 'o'))) return new Move(2, 0, 'o');
            if (moves.Exists(item => item.Item1 == 2 && item.Item2 == 0 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 0 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 0 && item.Item2 == 0 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 0 && item.Item2 == 0 && item.Item3 == 'o'))) return new Move(0, 0, 'o');
            if (moves.Exists(item => item.Item1 == 0 && item.Item2 == 0 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 2 && item.Item2 == 0 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 1 && item.Item2 == 0 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 0 && item.Item3 == 'o'))) return new Move(1, 0, 'o');

            if (moves.Exists(item => item.Item1 == 0 && item.Item2 == 1 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 2 && item.Item2 == 1 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 2 && item.Item2 == 1 && item.Item3 == 'o'))) return new Move(2, 1, 'o');
            if (moves.Exists(item => item.Item1 == 2 && item.Item2 == 1 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 0 && item.Item2 == 1 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 0 && item.Item2 == 1 && item.Item3 == 'o'))) return new Move(0, 1, 'o');
            if (moves.Exists(item => item.Item1 == 0 && item.Item2 == 1 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 2 && item.Item2 == 1 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o'))) return new Move(1, 1, 'o');

            if (moves.Exists(item => item.Item1 == 0 && item.Item2 == 2 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 2 && item.Item2 == 2 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 1 && item.Item2 == 2 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 2 && item.Item3 == 'o'))) return new Move(1, 2, 'o');
            if (moves.Exists(item => item.Item1 == 0 && item.Item2 == 2 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 2 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 2 && item.Item2 == 2 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 2 && item.Item2 == 2 && item.Item3 == 'o'))) return new Move(2, 2, 'o');
            if (moves.Exists(item => item.Item1 == 2 && item.Item2 == 2 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 2 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o'))) return new Move(1, 1, 'o');
            // Rows offensive
            if (moves.Exists(item => item.Item1 == 0 && item.Item2 == 0 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 0 && item.Item2 == 1 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 0 && item.Item2 == 2 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 0 && item.Item2 == 2 && item.Item3 == 'o'))) return new Move(0, 2, 'o');
            if (moves.Exists(item => item.Item1 == 0 && item.Item2 == 1 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 0 && item.Item2 == 2 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 0 && item.Item2 == 0 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 0 && item.Item2 == 0 && item.Item3 == 'o'))) return new Move(0, 0, 'o');
            if (moves.Exists(item => item.Item1 == 0 && item.Item2 == 0 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 0 && item.Item2 == 2 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 0 && item.Item2 == 1 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 0 && item.Item2 == 1 && item.Item3 == 'o'))) return new Move(0, 1, 'o');

            if (moves.Exists(item => item.Item1 == 1 && item.Item2 == 0 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 1 && item.Item2 == 2 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 2 && item.Item3 == 'o'))) return new Move(1, 2, 'o');
            if (moves.Exists(item => item.Item1 == 1 && item.Item2 == 2 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 1 && item.Item2 == 0 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 0 && item.Item3 == 'o'))) return new Move(1, 0, 'o');
            if (moves.Exists(item => item.Item1 == 1 && item.Item2 == 0 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 2 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o'))) return new Move(1, 1, 'o');

            if (moves.Exists(item => item.Item1 == 2 && item.Item2 == 0 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 2 && item.Item2 == 1 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 2 && item.Item2 == 2 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 2 && item.Item2 == 2 && item.Item3 == 'o'))) return new Move(2, 2, 'o');
            if (moves.Exists(item => item.Item1 == 2 && item.Item2 == 0 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 2 && item.Item2 == 2 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 2 && item.Item2 == 1 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 2 && item.Item2 == 1 && item.Item3 == 'o'))) return new Move(2, 1, 'o');
            if (moves.Exists(item => item.Item1 == 2 && item.Item2 == 2 && item.Item3 == 'o') && moves.Exists(item => item.Item1 == 2 && item.Item2 == 1 && item.Item3 == 'o') && (!moves.Exists(item => item.Item1 == 2 && item.Item2 == 0 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 2 && item.Item2 == 0 && item.Item3 == 'o'))) return new Move(2, 0, 'o');
            return new Nothing<Move>();
        }

        public static Maybe<Move> findMove(List<Move> moves)
        {
            if (moves.Count == 1 && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o')) return new Move(1, 1, 'o');
            if (moves.Count == 1 && !moves.Exists(item => item.Item1 == 0 && item.Item2 == 0 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 0 && item.Item2 == 0 && item.Item3 == 'o')) return new Move(0, 0, 'o');
            if (moves.Count == 1 && !moves.Exists(item => item.Item1 == 2 && item.Item2 == 0 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 2 && item.Item2 == 0 && item.Item3 == 'o')) return new Move(2, 0, 'o');
            // Collums defense
            if (moves.Exists(item => item.Item1 == 0 && item.Item2 == 0 && item.Item3 == 'x') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 0 && item.Item3 == 'x') && (!moves.Exists(item => item.Item1 == 2 && item.Item2 == 0 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 2 && item.Item2 == 0 && item.Item3 == 'o'))) return new Move(2, 0, 'o');
            if (moves.Exists(item => item.Item1 == 1 && item.Item2 == 2 && item.Item3 == 'x') && moves.Exists(item => item.Item1 == 2 && item.Item2 == 2 && item.Item3 == 'x') && (!moves.Exists(item => item.Item1 == 0 && item.Item2 == 2 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 0 && item.Item2 == 2 && item.Item3 == 'o'))) return new Move(0, 2, 'o');
            if (moves.Exists(item => item.Item1 == 1 && item.Item2 == 0 && item.Item3 == 'x') && moves.Exists(item => item.Item1 == 2 && item.Item2 == 0 && item.Item3 == 'x') && (!moves.Exists(item => item.Item1 == 0 && item.Item2 == 0 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 0 && item.Item2 == 0 && item.Item3 == 'o'))) return new Move(0, 0, 'o');
            if (moves.Exists(item => item.Item1 == 0 && item.Item2 == 2 && item.Item3 == 'x') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 2 && item.Item3 == 'x') && (!moves.Exists(item => item.Item1 == 2 && item.Item2 == 2 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 2 && item.Item2 == 2 && item.Item3 == 'o'))) return new Move(2, 2, 'o');
            // Diagonals defense
            if (moves.Exists(item => item.Item1 == 0 && item.Item2 == 0 && item.Item3 == 'x') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'x') && (!moves.Exists(item => item.Item1 == 2 && item.Item2 == 2 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 2 && item.Item2 == 2 && item.Item3 == 'o'))) return new Move(2, 2, 'o');
            if (moves.Exists(item => item.Item1 == 0 && item.Item2 == 0 && item.Item3 == 'x') && moves.Exists(item => item.Item1 == 2 && item.Item2 == 2 && item.Item3 == 'x') && (!moves.Exists(item => item.Item1 == 1 && item.Item2 == 2 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 2 && item.Item3 == 'o'))) return new Move(1, 2, 'o');
            if (moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'x') && moves.Exists(item => item.Item1 == 2 && item.Item2 == 2 && item.Item3 == 'x') && (!moves.Exists(item => item.Item1 == 0 && item.Item2 == 0 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 0 && item.Item2 == 0 && item.Item3 == 'o'))) return new Move(0, 0, 'o');

            if (moves.Exists(item => item.Item1 == 0 && item.Item2 == 2 && item.Item3 == 'x') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'x') && (!moves.Exists(item => item.Item1 == 2 && item.Item2 == 0 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 2 && item.Item2 == 0 && item.Item3 == 'o'))) return new Move(2, 0, 'o');
            if (moves.Exists(item => item.Item1 == 2 && item.Item2 == 0 && item.Item3 == 'x') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'x') && (!moves.Exists(item => item.Item1 == 0 && item.Item2 == 2 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 0 && item.Item2 == 2 && item.Item3 == 'o'))) return new Move(0, 2, 'o');
            if (moves.Exists(item => item.Item1 == 0 && item.Item2 == 2 && item.Item3 == 'x') && moves.Exists(item => item.Item1 == 2 && item.Item2 == 0 && item.Item3 == 'x') && (!moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o'))) return new Move(1, 1, 'o');
            // Cross defense
            if (moves.Exists(item => item.Item1 == 0 && item.Item2 == 1 && item.Item3 == 'x') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'x') && (!moves.Exists(item => item.Item1 == 2 && item.Item2 == 1 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 2 && item.Item2 == 1 && item.Item3 == 'o'))) return new Move(2, 1, 'o');
            if (moves.Exists(item => item.Item1 == 2 && item.Item2 == 1 && item.Item3 == 'x') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'x') && (!moves.Exists(item => item.Item1 == 0 && item.Item2 == 1 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 0 && item.Item2 == 1 && item.Item3 == 'o'))) return new Move(0, 1, 'o');
            if (moves.Exists(item => item.Item1 == 0 && item.Item2 == 1 && item.Item3 == 'x') && moves.Exists(item => item.Item1 == 2 && item.Item2 == 1 && item.Item3 == 'x') && (!moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o'))) return new Move(1, 1, 'o');

            if (moves.Exists(item => item.Item1 == 1 && item.Item2 == 0 && item.Item3 == 'x') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'x') && (!moves.Exists(item => item.Item1 == 1 && item.Item2 == 2 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 2 && item.Item3 == 'o'))) return new Move(1, 2, 'o');
            if (moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'x') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 2 && item.Item3 == 'x') && (!moves.Exists(item => item.Item1 == 1 && item.Item2 == 0 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 0 && item.Item3 == 'o'))) return new Move(1, 0, 'o');
            if (moves.Exists(item => item.Item1 == 1 && item.Item2 == 0 && item.Item3 == 'x') && moves.Exists(item => item.Item1 == 1 && item.Item2 == 2 && item.Item3 == 'x') && (!moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o'))) return new Move(1, 1, 'o');
            // If its impossible to loose
            if (!moves.Exists(item => item.Item1 == 0 && item.Item2 == 0 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 0 && item.Item2 == 0 && item.Item3 == 'o')) return new Move(0, 0, 'o');
            if (!moves.Exists(item => item.Item1 == 2 && item.Item2 == 0 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 2 && item.Item2 == 0 && item.Item3 == 'o')) return new Move(2, 0, 'o');
            if (!moves.Exists(item => item.Item1 == 0 && item.Item2 == 2 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 0 && item.Item2 == 2 && item.Item3 == 'o')) return new Move(0, 2, 'o');
            if (!moves.Exists(item => item.Item1 == 2 && item.Item2 == 2 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 2 && item.Item2 == 2 && item.Item3 == 'o')) return new Move(2, 2, 'o');
            if (!moves.Exists(item => item.Item1 == 0 && item.Item2 == 1 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 0 && item.Item2 == 1 && item.Item3 == 'o')) return new Move(0, 1, 'o');
            if (!moves.Exists(item => item.Item1 == 1 && item.Item2 == 0 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 0 && item.Item3 == 'o')) return new Move(1, 0, 'o');
            if (!moves.Exists(item => item.Item1 == 1 && item.Item2 == 2 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 2 && item.Item3 == 'o')) return new Move(1, 2, 'o');
            if (!moves.Exists(item => item.Item1 == 2 && item.Item2 == 1 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 2 && item.Item2 == 1 && item.Item3 == 'o')) return new Move(2, 1, 'o');
            if (!moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'x') && !moves.Exists(item => item.Item1 == 1 && item.Item2 == 1 && item.Item3 == 'o')) return new Move(1, 1, 'o');
            return new Nothing<Move>();
        }
    }
}
